name: Nightly Builder

# define when this workflow should run
on:
  push:    
    branches:
      - nightly
    paths-ignore:
      - '**.md'

jobs:
  build:
    # define all platforms to build for
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    # run the builds in parallel
    runs-on: ${{ matrix.platform }}
    steps:
    # checkout the repo
    - name: Checkout
      uses: actions/checkout@v2
    # setup the node environment
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 14
    # setup the rust environment
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    # install webkit2 for ubuntu only
    - name: Install Webkit2
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
    # install dependencies
    - name: Install Dependencies
      run: npm ci
    # create the .env file
    - name: Create .env File
    - if: matrix.platform == 'ubuntu-latest' # Linux .env
      run: |
        touch .env
        echo SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }} >> .env
        cat .env
    - if: matrix.platform == 'macos-latest' # MacOS .env
      run: |
        touch .env
        echo "SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }}" >> .env
    - if : matrix.platform == 'windows-latest' # Windows .env
      run: |
        echo SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }} > .env
    # build the app using tauri
    - name: Build App
      run: npm run tauri build
    - uses: tauri-apps/tauri-action@v0
      env: # add in the server address from secrets
        SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
      with:
        tagName: v__VERSION__-nightly # \_\_VERSION\_\_ is automatically replaced by the version
        releaseName: "Flux v__VERSION__-nightly"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false